<?php

namespace {namespace};

use Lxh\Auth\Menu;
use Lxh\Contracts\PluginRegister;
use Lxh\Router\Dispatcher as Router;
use Lxh\Template\Factory as ViewFactory;
use Lxh\Contracts\Container\Container;

define('{pluginConstName}', '{name}');
define('{pluginConstName}_NAMESPACE', '{namespace}');

class Application implements PluginRegister
{
    /**
     * @var string
     */
    protected $pluginName = '{name}';

    /**
     * @var string
     */
    protected $namespace = '{namespace}';

    /**
     * @var Router
     */
    protected $router;

    public function __construct()
    {
        $this->router = resolve('router');
    }

    /**
     * 插件注册方法
     *
     * @return void
     */
    public function register()
    {
        // 注册视图命名空间
//        $this->registerViewsNamespace();

        // 注册路由示例，如不需要请删除
//        $this->registerRouter();

        // 创建菜单示例，如不需要请删除
//        $this->registerMenu();

    }

    /**
     * 注册视图命名空间
     * 如果你的插件没有使用模板，则无需注册
     *
     * @return void
     */
    protected function registerViewsNamespace()
    {
        listen(EVENT_VIEW_FACTORY_RESOLVING, function (ViewFactory $factory) {
            $factory->addNamespace($this->pluginName, dirname(__DIR__) . '/views');
        });
    }

    /**
     * 注册插件菜单示例
     *
     * @return void
     */
    protected function registerMenu()
    {
        listen(EVENT_MENU_RESOLVING, function (Menu $menu) {
            // 权限判断
            if (auth()->can($this->pluginName)) {
                $menu->addPlugin($menu->buildRow('test', '/{name}/test'));
            }
        });
    }

    /**
     * 注册路由
     * 为防止冲突，请尽量使用长一点的url
     *
     * @return void
     */
    protected function registerRouter()
    {
        $prefix = $this->pluginName;
        // 定义为后台模块
        $module = admin_name();
        $namespace = "{$this->namespace}\\Http\\Controllers";
        $apiNamespace = "{$this->namespace}\\Http\\Controllers\\Api";

        // 常用路由规则注册示例
        // 如不需要请删除
        $this->router->attach([
            // 访问 => /{name}
            [
                'pattern' => "/$prefix",
                'method' => '*',
                'params' => [
                    'module' => $module,
                    'namespace' => &$namespace,
                    'controller' => 'Index',
                    'action' => 'Index',
                ]
            ],

            // 访问 => /{name}/user/action/create
            [
                'pattern' => "/$prefix/:lc@c/action/:lc@a",
                'method' => '*',
                'params' => [
                    'module' => $module,
                    'namespace' => &$namespace,
                    'controller' => ':lc@c',
                    'action' => ':lc@a',
                ]
            ],

            // 访问 => /{name}/user/view/12
            [
                'pattern' => "/$prefix/:lc@c/:lc@a/:int@id",
                'method' => '*',
                'params' => [
                    'module' => $module,
                    'namespace' => &$namespace,
                    'controller' => ':lc@c',
                    'action' => ':lc@a',
                    'id' => ':int@id',
                ]
            ],

            // 访问 => /{name}/api/user/view/12
            [
                'pattern' => "/$prefix/api/:lc@c/:lc@a/:int@id",
                'method' => '*',
                'params' => [
                    'module' => $module,
                    'namespace' => &$apiNamespace,
                    'controller' => ':lc@c',
                    'action' => ':lc@a',
                    'id' => ':int@id',
                ]
            ],

            // 访问 => /{name}/api/user/create
            [
                'pattern' => "/$prefix/api/:lc@c/:lc@a",
                'method' => '*',
                'params' => [
                    'module' => $module,
                    'namespace' => &$apiNamespace,
                    'controller' => ':lc@c',
                    'action' => ':lc@a',
                ]
            ],
        ]);

    }
}
