<?php

namespace Lxh\Admin\Form\Field;

use Lxh\Admin\Form\Field;

class DateRange extends Field
{
    protected static $css = [
        '@lxh/css/bootstrap-datetimepicker.min',
    ];

    protected static $js = [
        '@lxh/js/bootstrap-datetimepicker.min',
    ];

    protected $view = 'admin::form.date-range';

    /**
     *
     * @var array
     */
    protected $options = [
        'format' => 'yyyy-mm-dd',
        'locale' => 'zh-CH',
        'minView' => 'month',
    ];

    /**
     * @var array
     */
    protected $defaultValue = [];

    public function __construct($column, $arguments)
    {
        $this->column = $column;

        $this->defaultValue['start'] = get_value($arguments, 0);
        $this->defaultValue['end'] = get_value($arguments, 1);

        array_shift($arguments);

        $this->label = $this->formatLabel($this->column);
        $this->id = $this->formatId($this->defaultValue);
    }

    public function prepare($value)
    {
        if ($value === '') {
            $value = null;
        }

        return $value;
    }

    protected function variables()
    {
        $vars = parent::variables(); // TODO: Change the autogenerated stub

        $vars['defaultValue'] = &$this->defaultValue;

        return $vars;
    }

    public function render()
    {
        $startOptions = json_encode($this->options);
        $endOptions = json_encode($this->options + ['useCurrent' => false]);

        $class = $this->getElementClassSelector();

        $this->script = <<<EOT
$('{$class}-start').datetimepicker($startOptions);
$('{$class}-end').datetimepicker($endOptions);
$("{$class}-start").on("dp.change", function (e) {
    $('{$class}-end').data("DateTimePicker").minDate(e.date);
});
$("{$class}-end").on("dp.change", function (e) {
    $('{$class}-start').data("DateTimePicker").maxDate(e.date);
});
EOT;
        $this->prepend('<i class="fa fa-calendar"></i>');

        $this->options = [];

        return parent::render();
    }

}
